const { createClient } = require('redis');

// TODO
// Update redis connection URL
const REDIS_CONN_URL = 'redis://127.0.0.1:6379';

const redisClient = createClient({
  url: REDIS_CONN_URL,
});
const config = {
  bumpGasPrice: {
    3: 50,
    31: 50,
    42: 50,
    5: 50,
    8995: 50,
    15001: 50,
    16110: 50,
    4: 40,
    77: 50,
    100: 50,
    1: 25,
    80001: 50,
    137: 35,
    43113: 35,
    43114: 35,
    97: 50,
    1287: 40,
    56: 50,
    2021: 40,
    421611: 25,
    1285: 35,
  },
  slack: {
    channel: 'C02HRFB2T17',
  },
  provider: {
    77: 'https://sokol.poa.network',
    100: 'https://old-crimson-silence.xdai.quiknode.pro/54b6dfe2b18b52cd8cea8bc8807e4448d0332bc5/',
    3: 'https://ropsten.infura.io/v3/30125eccc47e475b9a9421f0eaf1e19',
    42: 'https://eth-kovan.alchemyapi.io/v2/8vLFyF65nIpyd1CrfhqHd7kYtetw3Y7y',
    5: 'https://goerli.infura.io/v3/30125eccc47e475b9a9421f0eaf1e19c',
    4: 'https://rinkeby.infura.io/v3/30125eccc47e475b9a9421f0eaf1e19c',
    1: 'https://eth-mainnet.alchemyapi.io/v2/8vLFyF65nIpyd1CrfhqHd7kYtetw3Y7y',
    80001: 'https://polygon-mumbai.infura.io/v3/113843749d494bc39ff60007ac6d121d',
    137: 'https://polygon-mainnet.g.alchemy.com/v2/s6bOKN9QDGXpVbsqzJMl_AHeZHNOCTcM',
    43113: 'https://api.avax-test.network/ext/bc/C/rpc',
    43114: 'https://api.avax.network/ext/bc/C/rpc',
    97: 'https://data-seed-prebsc-2-s3.binance.org:8545/',
    1287: 'https://moonbeam-alpha.api.onfinality.io/rpc?apikey=833584bb-127a-4134-bec7-7bd41af5130a',
    56: `https://purple-green-cherry.bsc.quiknode.pro/${process.env.BINANCE_MAINNET_SERVER_KEY}/`,
    2021: 'https://mainnet.edgewa.re/evm',
    421611: 'https://arbitrum-rinkeby.infura.io/v3/113843749d494bc39ff60007ac6d121d',
    42161: 'https://arbitrum-mainnet.infura.io/v3/113843749d494bc39ff60007ac6d121d',
    1285: 'https://moonriver.api.onfinality.io/rpc?apikey=833584bb-127a-4134-bec7-7bd41af5130a',
    1284: 'https://moonbeam.api.onfinality.io/public',
    250: 'https://apis.ankr.com/b0b9051eea794ecfafac081a2930957c/7c06eca67a94c3bc9d466a5f1ca366d3/fantom/full/main',
    4002: 'https://apis.ankr.com/6b774dee28d04084972d2dae89971495/7c06eca67a94c3bc9d466a5f1ca366d3/fantom/full/test',
  },
  relayerService: {
    gasLimit: {
      0: 210000,
      1: 710000,
    },
    networkResponseCodes: {
      errors: {
        ALREADY_KNOWN: 'already known',
        REPLACEMENT_UNDERPRICED: 'REPLACEMENT_UNDERPRICED',
        INSUFFICIENT_FUNDS: 'insufficient funds for gas',
        INVALID_TRANSACTION: 'submit transaction to pool failed',
      },
    },
    networksNonceError: {
      8995: 'nonce too low',
      80001: 'nonce too low',
      137: 'nonce too low',
      3: 'nonce too low',
      4: 'nonce too low',
      5: 'nonce too low',
      16110: 'nonce too low',
      15001: 'nonce too low',
      42: 'nonce is too low',
      1: 'nonce too low',
      77: 'nonce is too low',
      100: 'nonce is too low',
      43113: 'nonce too low',
      43114: 'nonce too low',
      97: 'nonce too low',
      1287: 'InvalidTransaction::Stale',
      1284: 'InvalidTransaction::Stale',
      56: 'nonce too low',
      2021: 'InvalidTransaction::Stale',
      421611: 'invalid transaction nonce',
      42161: 'invalid transaction nonce',
      1285: 'InvalidTransaction::Stale',
      250: 'nonce too low',
      4002: 'nonce too low',
    },
    networksInsufficientFundsError: {
      8995: 'insufficient funds for gas',
      80001: 'insufficient funds for gas',
      137: 'insufficient funds for gas',
      3: 'insufficient funds for gas',
      4: 'insufficient funds for gas',
      5: 'insufficient funds for gas',
      16110: 'insufficient funds for gas',
      15001: 'insufficient funds for gas',
      42: 'insufficient funds for gas',
      1: 'insufficient funds for gas',
      77: 'insufficient funds for gas',
      100: 'insufficient funds for gas',
      43113: 'insufficient funds for gas',
      43114: 'insufficient funds for gas',
      97: 'insufficient funds for gas',
      1287: 'insufficient funds for gas',
      1284: 'insufficient funds for gas',
      56: 'insufficient funds for gas',
      2021: 'insufficient funds for gas',
      421611: 'not enough funds for gas',
      42161: 'not enough funds for gas',
      1285: 'insufficient funds for gas',
      250: 'insufficient funds for intrinsic transaction',
      4002: 'insufficient funds for intrinsic transaction',
    },
    // fund relayer if below threshold balance
    relayerMinimumBalanceThreshold: {
      8995: 0.1,
      80001: 0.05,
      137: 7,
      3: 0.1,
      16110: 0.1,
      15001: 0.1,
      42: 0.04,
      4: 0.1,
      1: 0.5,
      77: 0.5,
      100: 2,
      31: 0.1,
      43113: 0.1,
      5: 0.2,
      97: 0.25,
      1287: 0.1,
      212984383488152: 0.2,
      56: 0.25,
      2021: 0.5,
      421611: 0.1,
      1285: 0.1,
      43114: 0.1,
    },
    txnHashKeyExpiryTimePerNetwork: {
      1: 540,
      137: 140,
      100: 224,
      80001: 115,
      42: 480,
      5: 746,
      4: 180,
      3: 180,
      43113: 480,
      43114: 480,
      97: 134,
      1287: 540,
      56: 134,
      2021: 480,
      421611: 60,
    },
    relayerFundingAmount: {
      8995: 0.02,
      137: 0.2,
      80001: 0.1,
      3: 0.02,
      16110: 0.02,
      15001: 0.02,
      42: 0.02,
      4: 0.07,
      1: 0.04,
      77: 0.03,
      100: 0.04,
      31: 0.05,
      43113: 0.5,
      43114: 0.1,
      5: 0.1,
      97: 0.5,
      1287: 0.02,
      56: 0.02,
      2021: 0.02,
      4002: 1,
    },
    numberOfRelayersPerNetwork: {
      8995: 1,
      80001: 5,
      3: 3,
      42: 5,
      4: 2,
      1: 3,
      100: 5,
      137: 3,
      43113: 3,
      43114: 2,
      5: 8,
      97: 5,
      1287: 1,
      56: 3,
      2021: 1,
      4002: 3,
    },
    maxRelayerQueueSizePerNetwork: {
      8995: 2,
      80001: 50,
      3: 5,
      42: 90,
      4: 3,
      1: 5,
      100: 8,
      137: 3,
      43113: 5,
      43114: 3,
      5: 10,
      97: 7,
      1287: 2,
      56: 5,
      2021: 2,
      4002: 5,
    },
    autoCreatedRelayersLengthPerNetwork: {
      8995: 1,
      80001: 18,
      3: 2,
      42: 26,
      4: 1,
      1: 2,
      100: 3,
      137: 2,
      43113: 2,
      43114: 1,
      5: 2,
      97: 2,
      1287: 1,
      56: 2,
      2021: 1,
      4002: 2,
    },
  },
  currency: {
    8995: 'MATIC',
    80001: 'MATIC',
    137: 'MATIC',
    3: 'ETH',
    4: 'ETH',
    5: 'ETH',
    16110: 'MATIC',
    5777: 'DEV',
    15001: 'MATIC',
    42: 'ETH',
    1512051714758: 'DEV',
    1: 'ETH',
    77: 'SPOA',
    100: 'XDAI',
    31: 'RBTC',
    43113: 'AVAX',
    43114: 'AVAX',
    97: 'BNB',
    1287: 'GLMR',
    1284: 'GLMR',
    56: 'BNB',
    2021: 'EDG',
    421611: 'ETH',
    42161: 'AETH',
    1285: 'MOVR',
    250: 'FTM',
    4002: 'FTM',
  },
  decimal: {
    8995: 18,
    80001: 18,
    137: 18,
    3: 18,
    4: 18,
    5: 18,
    16110: 18,
    15001: 18,
    42: 18,
    1: 18,
    77: 18,
    100: 18,
    31: 8,
    43113: 18,
    43114: 18,
    97: 18,
    1287: 18,
    1284: 18,
    56: 18,
    2021: 18,
    421611: 18,
    42161: 18,
    1285: 18,
    250: 18,
    4002: 18,
  },
  fiatCurrency: 'USD',
  NODE_PATH_INDEX: JSON.stringify({}),
};
redisClient.connect().then(() => {
  redisClient.set('RELAYER_CONFIGURATION', JSON.stringify(config));
  console.log('done');
}).finally(() => {
  process.exit(1);
});
